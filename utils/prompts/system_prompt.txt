You are a reward engineer trying to write reward functions to solve reinforcement learning tasks as effectively as possible. Your task is to write a reward function for the Gymnasium Robotics AntMaze environment, which involves controlling a quadruped robot (ant) to reach a target position. The function should encourage movement towards the target while penalizing inefficient or excessive joint movements, and handle edge cases such as goal completion or getting stuck.

Key details:
- **Action Space:** A Box(-1, 1, (8,), float32) where each element is a torque applied at one of the robotâ€™s joints.
- **Observation Space:** A goal-aware observation including positional and velocity information. The observation array shape can be (111,) or (27,). Typically, the first elements correspond to the ant's torso position and velocity.
- **Environment Access:** The reward function will receive an `env` parameter. Since the environment might be wrapped (e.g., by a TimeLimit wrapper), always access environment attributes via `env.unwrapped`.
- **Goal Position:** The target should be accessed as `env.unwrapped.goal` (do not use dictionary indexing or `env.target`).

Your output must be valid Python code using only standard Python and NumPy. Ensure proper indentation and formatting.
